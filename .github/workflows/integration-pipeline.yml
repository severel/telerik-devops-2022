name: Integration (Automatic)

on: [push]
# on:
# push:
#   branches:
#     - main
#     - "release/**"
# pull_request:
#   types: [opened, synchronize, reopened]
#   branches: [main, release/**]

jobs:
  # Code1q
  editorconfig-check:
    name: .editorconfig lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: editorconfig-checker/action-editorconfig-checker@v1
  markdown-lint:
    name: markdown lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: npx markdownlint-cli **/*.md

  linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  #unit-tests:
  #  runs-on: ubuntu-latest
  #  strategy:
  #    matrix:
  #      python-version: ["3.7", "3.8", "3.9", "3.10"]
  #  steps:
  #    - uses: actions/checkout@v3
  #    - name: Set up Python ${{ matrix.python-version }}
  #      uses: actions/setup-python@v4
  #      with:
  #        # python-version: "3.10"
  #        python-version: ${{ matrix.python-version }}
  #    - name: Install dependencies
  #      run: |
  #        python -m pip install --upgrade pip
  #        pip install pytest
  #        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  #    - name: Test with pytest
  #      run: |
  #        pytest
  #        # fails because there are not active test
 
  git-leaks:
     name: secrets detection
     runs-on: ubuntu-latest
     steps:
       - uses: actions/checkout@v3
         with:
           fetch-depth: 2
       - uses: gitleaks/gitleaks-action@v2
         env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Build
  # push_to_registry:
  #   needs: [editorconfig-check]
  #   name: Push Docker image to Docker Hub
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v3

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Extract metadata (tags, labels) for Docker
  #       id: meta
  #       uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
  #       with:
  #         images: ${{ secrets.DOCKER_NAMESPACE }}/${{ secrets.DOCKER_REPOSITORY }}
  #         tags: |
  #           type=sha,format=long

  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
  #       with:
  #         context: .
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
  #     # - name: Run Trivy vulnerability scanner
  #     #   uses: aquasecurity/trivy-action@master
  #     #   with:
  #     #     image-ref: "severel/aptest:sha-${{ github.sha }}"
  #     #     format: "table"
  #     #     exit-code: "1"
  #     #     ignore-unfixed: true
  #     #     vuln-type: "os,library"
  #     #     severity: "CRITICAL,HIGH"
  # Test
  # Deploy
